<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tiptimes.identity.dao.DictionaryTypeMapper">

  <resultMap id="BaseResultMap" type="com.tiptimes.identity.entity.DictionaryType">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="order" jdbcType="INTEGER" property="order" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="is_del" jdbcType="INTEGER" property="isDel" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>

  <sql id="Base_Column_List">
    id, parent_id, name, order, create_time, update_time, create_user, update_user, is_del, 
    status
  </sql>

  <select id="selectDetail" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from dictionary_type
    where id = #{id,jdbcType=INTEGER}
  </select>

  <insert id="insert" parameterType="com.tiptimes.identity.entity.DictionaryType">
    insert into dictionary_type (id, parent_id, name, 
      order, create_time, update_time, 
      create_user, update_user, is_del, 
      status)
    values (#{id,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{order,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=VARCHAR}, #{updateUser,jdbcType=VARCHAR}, #{isDel,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER})
  </insert>


  <update id="updateById" parameterType="com.tiptimes.identity.entity.DictionaryType">
    update dictionary_type
    set parent_id = #{parentId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      order = #{order,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=VARCHAR},
      is_del = #{isDel,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>