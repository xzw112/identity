<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tiptimes.identity.dao.InformationMapper">
    <resultMap id="BaseResultMap" type="com.tiptimes.identity.entity.Information">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="send_type" jdbcType="INTEGER" property="sendType"/>
        <result column="information_type" jdbcType="INTEGER" property="informationType"/>
        <result column="is_release" jdbcType="INTEGER" property="isRelease"/>
        <result column="create_user" jdbcType="VARCHAR" property="createUser"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_user" jdbcType="VARCHAR" property="updateUser"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="is_del" jdbcType="INTEGER" property="isDel"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.tiptimes.identity.entity.Information">
        <result column="content" jdbcType="LONGVARCHAR" property="content"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, title, send_type, information_type, is_release, create_user, create_time, update_user, 
    update_time, is_del
  </sql>
    <sql id="Blob_Column_List">
    content
  </sql>
    <select id="getInformationList" parameterType="com.tiptimes.identity.qo.InformationRequest"
            resultType="com.tiptimes.identity.vo.InformationVo">
         SELECT
            i.id id,
            i.title title,
            i.send_type sendType,
            i.is_release isRelease,
            i.information_type informationType,
            i.create_time createTimeStr,
            i.content content,
            i.update_time releaseTime,
            u.user_name userName,
            u.login_name loginName
        FROM information i
        INNER JOIN tp_main_admin_user u ON ( u.id = i.create_user )
        WHERE 1 = 1
        AND i.is_del = #{isDel}
        <if test="title != null and title != ''">
            AND i.title LIKE CONCAT('%',#{title},'%')
        </if>
        <if test="informationType > 0">
            AND i.information_type = #{informationType}
        </if>
        <if test="sendType > 0">
            AND i.send_type = #{sendType}
        </if>
        ORDER BY i.create_time DESC
    </select>
    <!--根据id查询详情-->
    <select id="selectDetailById" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from information
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <!--删除-->
    <delete id="deleteById" parameterType="java.lang.String">
    delete from information
    where id = #{id,jdbcType=VARCHAR}
  </delete>
    <update id="updateDel" parameterType="java.lang.String">
        update information set is_del = 0 where id = #{id}
    </update>
    <update id="updateUnDel" parameterType="java.lang.String">
        update information set is_del = 1 where id = #{id}
    </update>
    <!--根据Id更新-->
    <update id="updateById" parameterType="com.tiptimes.identity.entity.Information">
    update information
    set title = #{title,jdbcType=VARCHAR},
      send_type = #{sendType,jdbcType=INTEGER},
      information_type = #{informationType,jdbcType=INTEGER},
      is_release = #{isRelease,jdbcType=INTEGER},
      update_user = #{updateUser,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
    <!--修改消息的发布状态-->
    <update id="updateInformationStatus" parameterType="com.tiptimes.identity.qo.InformationStatusRequest">
        update information
        set
        is_release = #{isRelease},
        update_time = #{updateTime}
        where id = #{id}
    </update>
    <!--新增-->
    <insert id="insert" parameterType="com.tiptimes.identity.entity.Information">
    insert into information (id, title, send_type, 
      information_type, is_release, create_user, 
      create_time, update_user, update_time, 
    content)
    values (#{id,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{sendType,jdbcType=INTEGER}, 
      #{informationType,jdbcType=INTEGER}, #{isRelease,jdbcType=INTEGER}, #{createUser,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>

</mapper>