<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tiptimes.identity.dao.PostMapper">
  <resultMap id="BaseResultMap" type="com.tiptimes.identity.entity.Post">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="post_name" jdbcType="VARCHAR" property="postName"/>
    <result column="post_code" jdbcType="VARCHAR" property="postCode"/>
    <result column="post_dec" jdbcType="VARCHAR" property="postDec"/>
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="is_del" jdbcType="INTEGER" property="isDel" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="sort" jdbcType="VARCHAR" property="sort"/>
    <result column="department_id" jdbcType="INTEGER" property="departmentId"/>
  </resultMap>
  <sql id="Base_Column_List">
    id, post_name, post_code, post_dec, status, is_del, create_time, update_time, create_user, update_user, sort, department_id
  </sql>

  <select id="selectPostList" parameterType="com.tiptimes.identity.qo.PostRequest" resultType="com.tiptimes.identity.vo.PostVo">
    select
    p.id id, p.post_name postName,
    p.post_code postCode, p.post_dec postDec,
    p.status status, p.is_del isDel,
    p.create_time createTime, p.update_time updateTime,
    p.create_user createUser, p.update_user updateUser,
    p.sort sort, p.department_id departmentId,
    d.name departmentName
    from post p
    LEFT JOIN department d ON(d.id = p.department_id)
    where
    p.is_del = 0
    <if test="postName != null and postName != ''">
      and p.post_name like CONCAT('%',#{postName},'%')
    </if>
    <if test="departmentId != null and departmentId">
      and p.department_id = #{departmentId}
    </if>
    ORDER BY sort ASC
  </select>

  <select id="selectDetail" parameterType="java.lang.Integer" resultType="com.tiptimes.identity.vo.PostVo">
    select 
    p.id id, p.post_name postName,
    p.post_code postCode, p.post_dec postDec,
    p.status status, p.is_del isDel,
    p.create_time createTime, p.update_time updateTime,
    p.create_user createUser, p.update_user updateUser,
    p.sort sort, p.department_id departmentId,
    d.name departmnetName
    from post p
    LEFT JOIN department d ON(d.id = p.department_id)
    where p.id = #{id,jdbcType=INTEGER}
  </select>

  <insert id="insert" parameterType="com.tiptimes.identity.entity.Post">
    insert into post (post_name, status,
      is_del, create_time, create_user, sort, post_code, post_dec, department_id)
    values (#{postName,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER},
      #{isDel,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
      #{createUser,jdbcType=VARCHAR}, #{sort,jdbcType=VARCHAR},
      #{postCode, jdbcType=VARCHAR}, #{postDec, jdbcType=VARCHAR},
      #{departmentId, jdbcType=INTEGER})
  </insert>

  <update id="updateById" parameterType="com.tiptimes.identity.entity.Post">
    update post
    set post_name = #{postName,jdbcType=VARCHAR},
        post_code = #{postCode,jdbcType=VARCHAR},
        post_dec = #{postDec,jdbcType=VARCHAR},
        sort = #{sort,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      department_id = #{departmentId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="del" parameterType="java.lang.Integer">
     update post
     set is_del = 1
     where id = #{id}
  </update>
</mapper>